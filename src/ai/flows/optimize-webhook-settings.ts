// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI-powered tool to analyze webhook settings and suggest improvements.
 *
 * - optimizeWebhookSettings - A function that handles the webhook settings optimization process.
 * - OptimizeWebhookSettingsInput - The input type for the optimizeWebhookSettings function.
 * - OptimizeWebhookSettingsOutput - The return type for the optimizeWebhookSettings function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeWebhookSettingsInputSchema = z.object({
  webhookUrl: z.string().url().describe('The URL of the webhook to analyze.'),
  eventTriggers: z.array(z.string()).describe('The event triggers configured for the webhook.'),
  payloadSettings: z.record(z.any()).describe('The current payload settings of the webhook.'),
  description: z.string().optional().describe('Optional description of the webhook and its purpose.'),
});

export type OptimizeWebhookSettingsInput = z.infer<typeof OptimizeWebhookSettingsInputSchema>;

const OptimizeWebhookSettingsOutputSchema = z.object({
  suggestedImprovements: z.string().describe('AI-generated suggestions for optimizing webhook settings.'),
  confidenceLevel: z.number().min(0).max(1).describe('Confidence level of the suggested improvements (0 to 1).'),
});

export type OptimizeWebhookSettingsOutput = z.infer<typeof OptimizeWebhookSettingsOutputSchema>;

export async function optimizeWebhookSettings(input: OptimizeWebhookSettingsInput): Promise<OptimizeWebhookSettingsOutput> {
  return optimizeWebhookSettingsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeWebhookSettingsPrompt',
  input: {schema: OptimizeWebhookSettingsInputSchema},
  output: {schema: OptimizeWebhookSettingsOutputSchema},
  prompt: `You are an AI expert in webhook optimization.

You will analyze the provided webhook settings and suggest improvements for optimal performance and reliability.

Consider the following information about the webhook:

Webhook URL: {{{webhookUrl}}}
Event Triggers: {{#each eventTriggers}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}
Payload Settings: {{{JSON.stringify payloadSettings}}}
Description: {{{description}}}

Based on this information, provide actionable suggestions for improvement, and include a confidence level (0 to 1) for your suggestions.
`,
});

const optimizeWebhookSettingsFlow = ai.defineFlow(
  {
    name: 'optimizeWebhookSettingsFlow',
    inputSchema: OptimizeWebhookSettingsInputSchema,
    outputSchema: OptimizeWebhookSettingsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
